# ------------------------------
#  WORKFLOW NAME
# ------------------------------
name: Build and Publish Website

# ------------------------------
#  TRIGGERS
# ------------------------------
on:
  push:            # Run the workflow every time code is pushed
    branches:
      - main       # Only run when the push targets the main branch

# ------------------------------
#  PERMISSIONS
# ------------------------------
permissions:
  contents: write  # allows write for pages

# ------------------------------
#  JOBS
# ------------------------------
jobs:
  build:                     # Job name ("build")
    runs-on: ubuntu-latest   # GitHub will create a fresh Ubuntu VM

    steps:
      # Step 1: Obtain copy of repo files on VM
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Create html format
      - name: Generate file list HTML
        run: |
          # ------------------------------
          # 1. START THE HTML PAGE
          # ------------------------------
          # The cat <<'EOF' ... EOF syntax writes everything between to index.html.
          cat <<'EOF' > index.html
          <html>
          <head>
            <meta charset="utf-8">
            <title>Project Files Team 15</title>
              <!-- Simple styling to make the page look better:
                - Set font to Arial
                - Add some margins
                - Color headings -->
            <style>
              body { font-family: Arial, sans-serif; margin: 2rem; line-height:1.6; }
              h1 { color:#333333; }
              h2, h3 { margin-top:1.2em; color:#444444; }
              ul { list-style-type: none; padding-left: 1rem; }
              li { margin: 0.3em 0; }
              a { text-decoration: none; color: #1a73e8; }
              a:hover { text-decoration: underline; }
              .recent { background: #f0f4ff; padding:0.5em; border-radius:5px; }
              .date { color: #555; font-size: 0.9em; }
            </style>
          </head>
          <body>
          <h1>Project Repository Files</h1>
          <p>This page is auto-generated on every push to <code>main</code>.</p>
          EOF

          # ------------------------------
          # 2. Forming recently updated section
          # ------------------------------
          echo "<div class='recent'><h2>Recently Updated Files</h2><ul>" >> index.html

          # The git log command below:
          # --pretty=format:'%ad'     -> print commit date
          # --date=short              -> date in YYYY-MM-DD format
          # -n 50                     -> look at the last 50 commits
          
          # from changed file list, determine first occurrance of each file
          # then use awk to pattern match dates and look for lines not yet seen before in the fields
          # take first 5 entries of the created date/unique file list
          git log --pretty=format:'%ad' --date=short -n 50 --name-only | \
            awk 'BEGIN{date=""}
                 /^20[0-9][0-9]-/ {date=$0; next}  # lines with dates set current date
                 NF {if(!seen[$0]++){print date"|"$0}}' | \
            head -5 | \
            while IFS="|" read date file; do
              # For each unique file (newest first), add a list item with link and date
              # append it to the site
              echo "<li><a href=\"https://github.com/senior-design-pool-shark/ECE4950_Pook-Shark/blob/main/$file\">$file</a> <span class=\"date\">($date)</span></li>" >> index.html
            done

          echo "</ul></div>" >> index.html

          # ------------------------------
          # 3. GROUP ALL FILES BY TOP-LEVEL FOLDER
          # ------------------------------
          echo "<h2>All Files by Folder</h2>" >> index.html

          # 'find' lists every file (except .git folder and the index.html weâ€™re generating)
          # 'sed' removes the leading "./" from each path
          # 'sort' ensures the list is alphabetically ordered so grouping works
          # | is pipe into next command
          find . -type f ! -path "./.git/*" ! -name "index.html" | sed 's|^\./||' | sort | \
          awk -F/ '
            BEGIN{current=""}
            {
              folder=$1;  # first part of the path, e.g. "projects_1"
              if(folder!=current){
                if(current!=""){print "</ul>"}         # close previous list if switching folders
                print "<h3>"folder"</h3><ul>";         # start new section
                current=folder
              }
              subpath = ($2) ? substr($0, index($0, $2)) : $0
              print "<li><a href=\"https://github.com/senior-design-pool-shark/ECE4950_Pook-Shark/blob/main/"$0"\">"subpath"</a></li>"
            }
            END{if(current!=""){print "</ul>"}}
          ' >> index.html

          # ------------------------------
          # 4. CLOSE THE HTML PAGE
          # ------------------------------
          echo "</body></html>" >> index.html

      # Step 3 Build pages website
      - name : Deploy to pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          publish_dir: .

